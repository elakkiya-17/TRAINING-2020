problemset03 24 2020
elakkiya.mamallan@accenture.com

1)Find the titles of all movies directed by Steven Spielberg. (1 point possible)

select title from movie where director='Steven Spielberg';

E.T
Raiders of the Lost Ark

2)Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. (1 point possible)

select year from movie m inner join rating r on m.mid=r.mid where stars IN(4,5) order by stars;

1939
1937
1981
1981
1937
2009

3)Find the titles of all movies that have no ratings.

select title from movie m inner join rating r on m.mid=r.mid where stars IS NULL;


4)Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. (1 point possible)

select name from reviewer r inner join rating r1 on r.rid=r1.rid where ratingdate IS NULL;

Daniel Lewis
Chris Jackson

5)Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. (1 point possible)

SELECT distinct r.name,m.title,r1.stars,r1.ratingdate from reviewer r inner join rating r1 on r.rid=r1.rid inner join movie m on m.mid=r1.mid order by r.name,m.title,r1.stars;

Ashley White|E.T|3|2011-01-02
Brittany Harris|Raiders of the Lost Ark|2|2011-01-30
Brittany Harris|Raiders of the Lost Ark|4|2011-01-12
Brittany Harris|The Sound of Music|2|2011-01-20
Brittany Harris|Titanic|2|2011-01-20
Chris Jackson|E.T|2|2011-01-22
Chris Jackson|Raiders of the Lost Ark|4|
Chris Jackson|The Sound of Music|3|2011-01-27
Chris Jackson|Titanic|3|2011-01-27
Daniel Lewis|Snow White|4|
Elizabeth Thomas|Avatar|3|2011-01-15
Elizabeth Thomas|Snow White|5|2011-01-19
James Cameron|Avatar|5|2011-01-20
Mike Anderson|Gone with the Wind|3|2011-01-09
Sarah Martinez|Gone with the Wind|2|2011-01-22
Sarah Martinez|Gone with the Wind|4|2011-01-27

6)For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. (1 point possible)

 select distinct name,title from reviewer r inner join rating r1
 on r.rid=r1.rid inner join movie m on m.mid=r1.mid
 where (r1.mid,r1.rid) in(select r2.mid,r2.rid from rating r2 group by r2.mid,r2.rid having count(r2.mid)>1 )
 and r1.mid in (select r3.mid from rating r3 inner join rating r4 on r3.mid=r4.mid where r3.stars > r4.stars and r3.ratingdate>r4.ratingdate);
 
 Sarah Martinez|Gone with the Wind
 
 7)For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. (1 point possible)
 
select title,max(stars) from reviewer r inner join rating r1 on r.rid=r1.rid
inner join movie m on m.mid=r1.mid group by r1.mid order by title;

Avatar|5
E.T|3
Gone with the Wind|4
Raiders of the Lost Ark|4
Snow White|5
The Sound of Music|3

8)For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. (1 point possible)

select title,(max(stars)-min(stars)) as rating_spread  from reviewer r inner join rating r1 on r.rid=r1.rid inner join movie m on m.mid=r1.mid group by r1.mid order by rating_spread desc,title;

Avatar|2
Gone with the Wind|2
Raiders of the Lost Ark|2
E.T|1
Snow White|1
The Sound of Music|1

9)Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.) (1 point possible)

SELECT AVG(Before1980.avg) - AVG(After1980.avg)
FROM (
  SELECT AVG(stars) AS avg
  FROM Movie
  INNER JOIN Rating USING(mId)
  WHERE year < 1980
  GROUP BY mId
) AS Before1980, (
  SELECT AVG(stars) AS avg
  FROM Movie
  INNER JOIN Rating USING(mId)
  WHERE year > 1980
  GROUP BY mId
) AS After1980;

0.25


10)Find the names of all reviewers who rated Gone with the Wind. (1 point possible)

select distinct name from reviewer r inner join rating r1 on r.rid=r1.rid
inner join movie m on m.mid=r1.mid
where m.title='Gone with the Wind';

Sarah Martinez
Mike Anderson

11)For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars. (1 point possible)

select name,title,stars from reviewer r inner join rating r1 on r.rid=r1.rid
inner join movie m on m.mid=r1.mid
where name=director;

James Cameron|Avatar|5

12)Return all reviewer names and movie names together in a single list, alphabetized. (Sorting by the first name of the reviewer and first word in the title is fine; no need for special processing on last names or removing "The".) 

select name from reviewer union select title from movie order by name,title;

Ashley White
Avatar
Brittany Harris
Chris Jackson
Daniel Lewis
E.T
Elizabeth Thomas
Gone with the Wind
James Cameron
Mike Anderson
Raiders of the Lost Ark
Sarah Martinez
Snow White
Star Wars
The Sound of Music
Titanic

13)Find the titles of all movies not reviewed by Chris Jackson. (1 point possible)

select title from movie where mid not in (select mid from rating where rid=205);

Gone with the Wind
Star Wars
Titanic
Snow White
Avatar

14)For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order. (1 point possible)

SELECT DISTINCT Re1.name, Re2.name
FROM Rating R1, Rating R2, Reviewer Re1, Reviewer Re2
WHERE R1.mID = R2.mID
AND R1.rID = Re1.rID
AND R2.rID = Re2.rID
AND Re1.name < Re2.name
ORDER BY Re1.name, Re2.name;

Ashley White|Chris Jackson
Brittany Harris|Chris Jackson
Daniel Lewis|Elizabeth Thomas
Elizabeth Thomas|James Cameron
Mike Anderson|Sarah Martinez


15)For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars. (1 point possible)

select name,title,stars from movie m inner join rating r on m.mid=r.mid inner join reviewer rr on rr.rid=r.rid where stars =(select min(stars) from rating);

Sarah Martinez|Gone with the Wind|2
Brittany Harris|The Sound of Music|2
Brittany Harris|Titanic|2
Brittany Harris|Titanic|2
Brittany Harris|Raiders of the Lost Ark|2
Chris Jackson|E.T|2

16)List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. (1 point possible)

select title,avg(stars) from movie m inner join rating r on m.mid=r.mid inner join reviewer rr on rr.rid=r.rid group by r.mid order by avg(stars) desc,title;

Snow White|4.5
Avatar|4.0
Raiders of the Lost Ark|3.33333333333333
Gone with the Wind|3.0
E.T|2.5
The Sound of Music|2.5

17)Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.) (1 point possible)

select name from reviewer r inner join rating r1 on r.rid=r1.rid group by r.rid having count(r1.rid) >=3;

Brittany Harris
Chris Jackson

18)Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with and without COUNT.) (1 point possible)

select distinct title,director from movie where director in (select director from movie group by director having count(director)>=2)order by director,title;

Avatar|James Cameron
Titanic|James Cameron
E.T|Steven Spielberg
Raiders of the Lost Ark|Steven Spielberg

19)Find the movie(s) with the highest average rating. Return the movie title(s) and average rating. (Hint: This query is more difficult to write in SQLite than other systems; you might think of it as finding the highest average rating and then choosing the movie(s) with that average rating.) (1 point possible)

SELECT title, AVG(stars) AS average
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
HAVING average = (
  SELECT MAX(average_stars)
  FROM (
    SELECT title, AVG(stars) AS average_stars
    FROM Movie
    INNER JOIN Rating USING(mId)
    GROUP BY mId
  )
);

Snow White|4.5

20)Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating. (Hint: This query may be more difficult to write in SQLite than other systems; you might think of it as finding the lowest average rating and then choosing the movie(s) with that average rating.) (1 point possible)

SELECT title, AVG(stars) AS average
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
HAVING average = (
  SELECT MIN(average_stars)
  FROM (
    SELECT title, AVG(stars) AS average_stars
    FROM Movie
    INNER JOIN Rating USING(mId)
    GROUP BY mId
  )
);

The Sound of Music|2.5
E.T|2.5

21)For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. (1 point possible)

select director,title,max(stars) from movie m inner join rating r on m.mid=r.mid group by director having director is not null;

James Cameron|Avatar|5
Robert Wise|The Sound of Music|3
Steven Spielberg|Raiders of the Lost Ark|4
Victor Fleming|Gone with the Wind|4
