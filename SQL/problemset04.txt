Problemset04 25 2020
elakkiya.mamallan@acccenture.com

1)Find the names of all students who are friends with someone named Gabriel. (1 point possible)

select name from highschooler h inner join friend f on h.id=f.id1 where f.id2 IN(1689,1911);

Jordan
Alexis
Cassandra
Andrew
Jessica

2)For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. (1 point possible)

select  distinct h.name,h.grade,h1.name,h1.grade from highschooler h,highschooler h1,likes l,likes l1 where h.id=l.id1 and h1.id=l.id2 and (h.grade-h1.grade) >=2;

John|12|Haley|10

3)For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. (1 point possible)

select distinct h.name,h.grade,h1.name,h1.grade from highschooler h inner join likes  l on h.id=l.id1 inner join highschooler h1 on h1.id=l.id2 where l.id1 IN(select l2.id1 from likes l2 inner join likes l3 on l2.id1=l3.id2 where l2.id1=l3.id2 and l2.id2=l3.id1)order by h.name,h1.name;

Cassandra|9|Gabriel|9
Gabriel|9|Cassandra|9
Jessica|11|Kyle|12
Kyle|12|Jessica|11

4)Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. (1 point possible)

select id,name,grade from highschooler where id NOT IN(select id1 from likes) AND id not in(select id2 from likes)order by grade,name;

1510|Jordan|9
1381|Tiffany|9
1661|Logan|12

5)For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. (1 point possible)

select h.name,h.grade,h1.name,h1.grade from highschooler h inner join likes  l on h.id=l.id1 inner join highschooler h1 on h1.id=l.id2 where l.id2 NOT IN(select l2.id1 from likes L2);

Alexis|11|Kris|10
Brittany|10|Kris|10
Austin|11|Jordan|12
John|12|Haley|10

6)Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. (1 point possible)

select name, grade from highschooler where id not in (select id1 from highschooler h1, friend, highschooler h2 where h1.id = friend.id1 and friend.id2 = h2.id and h1.grade <> h2.grade)order by grade, name;

Jordan|9
Brittany|10
Haley|10
Kris|10
Gabriel|11
John|12
Logan|12
7)For each student A who likes a student B where the two are not friends, find if they have a friend C in common (who can introduce them!). For all such trios, return the name and grade of A, B, and C. 

select distinct H1.name, H1.grade, H2.name, H2.grade, H3.name, H3.grade
from Highschooler H1, Likes, Highschooler H2, Highschooler H3, Friend F1, Friend F2
where H1.ID = Likes.ID1 and Likes.ID2 = H2.ID and
H2.ID not in (select ID2 from Friend where ID1 = H1.ID) and
H1.ID = F1.ID1 and F1.ID2 = H3.ID and
H3.ID = F2.ID1 and F2.ID2 = H2.ID;
  
Andrew|10|Cassandra|9|Gabriel|9
Austin|11|Jordan|12|Andrew|10
Austin|11|Jordan|12|Kyle|12


8)Find the difference between the number of students in the school and the number of different first names. (1 point possible)

select all1.total_name-uni.uni_name from (select count(name) as total_name from highschooler) as all1,(select count(distinct name) as uni_name from highschooler) as uni;

2

9)Find the name and grade of all students who are liked by more than one other student. (1 point possible)

select distinct name,grade from highschooler h inner join likes l on h.id=l.id2 where id2 in (select id2 from likes group by id2 having count(id2)>1 ) and id2 in (select id1 from likes);

Cassandra|9

10)For every situation where student A likes student B, but student B likes a different student C, return the names and grades of A, B, and C. (1 point possible)

select h1.name,h1.grade,h2.name,h2.grade,h3.name,h3.grade from highschooler h1,highschooler h2,highschooler h3 ,likes l1,likes l2
where h1.id=l1.id1 and h2.id=l1.id2 and (h2.id=l2.id1 and h3.id=l2.id2 and h3.id <>h1.id);

Andrew|10|Cassandra|9|Gabriel|9
Gabriel|11|Alexis|11|Kris|10

11)Find those students for whom all of their friends are in different grades from themselves. Return the students' names and grades.(1 point possible)

select name,grade from highschooler  h where grade not in (select grade from highschooler h1 inner join friend f on h.id=f.id1 and h1.id=f.id2);

Austin|11

12)What is the average number of friends per student? (Your result should be just one number.) (1 point possible)

select avg(total) from (select count(id2)  as total  from friend group by id1);

2.5

13)Find the number of students who are either friends with Cassandra or are friends of friends of Cassandra. Do not count Cassandra, even though technically she is a friend of a friend.

select count(*) from friend where id1 in (select id2 from friend where id1 =1709);

7

14)Find the name and grade of the student(s) with the greatest number of friends. (1 point possible)

select name,grade from highschooler h inner join friend f on h.id=f.id1 group by id1 having count(id2)=(select max(count) from (select count(id2) as count from friend group by id1));

Alexis|11
Andrew|10


